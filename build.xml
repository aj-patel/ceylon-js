<project name="Ceylon JS compiler" default="test" basedir=".">
    <property file="build.properties" />

    <!-- Set build directories for all formats. -->
    <property name="build.dir" value="${basedir}/build" />
    <property name="build.classes" location="${build.dir}/classes/main" />
    <property name="build.test-classes" location="${build.dir}/classes/test" />
    <property name="build.dist" location="${build.dir}/dist" />
    <property name="build.lib" location="${build.dir}/lib" />
    <property name="build.test" location="${build.dir}/test" />

    <property name="test-src" location="src/test/java" />
    <property name="src" location="src/main/java" />
    <property name="js-src" location="src/main/js" />
    <property name="runtime" value="build/runtime" />

    <property name="jscompiler.jar" value="jscompiler-${module.jscompiler.version}.jar" />
    <property name="jscompiler.lib" location="${build.lib}/${jscompiler.jar}" />
    <property name="jslangfile" value="ceylon.language.js" />
    <property name="jslangpath" value="ceylon/language/0.1" />
    <property name="jslangmodule" value="${jslangpath}/${jslangfile}" />
	
    <tstamp />

    <!-- Local repository -->
    <property name="ceylon.repo.dir" location="${user.home}/.ceylon/repo" />

    <!-- module archives -->
    <property name="ceylon.typechecker.loc" value="${basedir}/../ceylon-spec" />
    <property name="ceylon.typechecker.dir" value="com/redhat/ceylon/typechecker/${module.com.redhat.ceylon.typechecker.version}" />
    <property name="ceylon.typechecker.jar" value="${ceylon.typechecker.dir}/com.redhat.ceylon.typechecker-${module.com.redhat.ceylon.typechecker.version}.jar" />
    <property name="ceylon.typechecker.lib" location="${ceylon.repo.dir}/${ceylon.typechecker.jar}" />

    <path id="test.run.classpath">
        <fileset dir="${ceylon.typechecker.loc}/lib">
            <include name="**/*.jar" />
        </fileset>
        <pathelement location="${ceylon.typechecker.lib}" />
        <pathelement location="${build.classes}" />
        <pathelement location="${build.test-classes}" />
    </path>

    <!-- Rule to clean everything up -->
    <target name="clean" description="Clean up everything">
        <delete dir="${build.dir}" />
    </target>

    <!-- project compilation -->
    <target name="compile" description="compile the js compiler">
        <mkdir dir="${runtime}/${jslangpath}" />
        <mkdir dir="${build.classes}" />
        <!-- compile Java sources -->
        <echo message="${ceylon.typechecker.lib}" />
        <javac srcdir="${src}" destdir="${build.classes}" debug="true" classpath="${ceylon.typechecker.lib}">
            <include name="**/*.java" />
        </javac>
        <!-- generate the ceylon.language.js file -->
        <java classname="com.redhat.ceylon.compiler.js.Stitcher" classpath="${build.classes}">
        	<arg value="${js-src}/${jslangfile}" />
        	<arg value="${runtime}/${jslangpath}" />
        </java>
    </target>

    <!-- build jscompiler jar -->
    <target name="jscompiler.jar" depends="compile">
        <mkdir dir="${build.lib}"/>
        <jar destfile="${jscompiler.lib}">
            <fileset dir="${build.classes}">
            </fileset>
        </jar>
    </target>
	
    <target name="build" depends="jscompiler.jar">
    </target>

	<target name="test-compile" depends="build">
        <mkdir dir="${build.test-classes}" />
    	<javac srcdir="${test-src}" destdir="${build.test-classes}" debug="true">
    		<classpath>
    			<pathelement location="${ceylon.typechecker.lib}" />
    			<pathelement location="${build.classes}" />
    		</classpath>
    	</javac>
	</target>

    <target name="compiletest" depends="test-compile">
        <java classname="MainForJsTest" classpathref="test.run.classpath" failonerror="true">
        	<sysproperty key="file.encoding" value="UTF-8" />
        </java>
    </target>

    <target name="compileopttest" depends="build">
        <java classname="MainForJsTest" classpathref="test.run.classpath" failonerror="true">
            <arg value="optimize" />
        	<sysproperty key="file.encoding" value="UTF-8" />
        </java>
    </target>

    <target name="test" depends="compiletest,compileopttest" description="Run generated source comparison tests" />

    <target name="nodetest" depends="compiletest" description="Run tests on node.js (requires node)">
        <echo message="Running tests on node.js (node must be installed)" />
        <mkdir dir="${build.test}/node_modules/${jslangpath}" />
        <copy file="${runtime}/${jslangmodule}" todir="${build.test}/node_modules/${jslangpath}" />
        <java classname="NodeTest" classpathref="test.run.classpath">
            <arg value="${build.test}/node_modules/default" />
        </java>
    </target>

    <target name="nodeopttest" depends="compileopttest" description="Run tests on node.js (requires node)">
        <echo message="Running tests on node.js (node must be installed)" />
        <mkdir dir="${build.test}/node_modules/${jslangpath}" />
        <copy file="${runtime}/${jslangmodule}" todir="${build.test}/${jslangpath}" />
        <java classname="NodeTest" classpathref="test.run.classpath">
            <arg value="${build.test}/node_modules/default" />
        </java>
    </target>

</project>
